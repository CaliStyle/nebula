import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { ActivityHeaderComponent } from './activity-header.component'
import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core'
import { Component } from '@angular/core'
import { Observable, of } from 'rxjs'
import { ComponentTestContext } from '../../../../testing/test-context'
import { HomeCardComponent } from '../home-card/home-card.component'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { AnalyticsComponent } from './analytics.component'
import { Component, OnInit, Input } from '@angular/core'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { AnalyticsHeaderComponent } from './analytics-header.component'
import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { RouterModule } from '@angular/router'
import { SharedModule } from '../../../shared/shared.module'
import { ServicesModule } from '../services/services.module'
import { NgrxFormsModule } from 'ngrx-forms'
import { ControllersModule } from '../controllers/controllers.module'
import { COMPONENTS } from './components.module'
import { MockComponent } from 'ng-mocks'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { FormsModule } from '@angular/forms'
import { RouterModule } from '@angular/router'
import { ServicesModule } from '../services/services.module'
import { ActivityHeaderComponent } from './activity-header/activity-header.component'
import { AnalyticsHeaderComponent } from './analytics-header/analytics-header.component'
import { HeaderBreadcrumbsComponent } from './header-breadcrumbs/header-breadcrumbs.component'
import { HeaderSearchComponent } from './header-search/header-search.component'
import { HomeCardComponent } from './home-card/home-card.component'
import { HomeHeaderComponent } from './home-header/home-header.component'
import { ProfileComponent } from './profile/profile.component'
import { SidenavComponent } from './sidenav/sidenav.component'
import { SharedModule } from '../../../shared/shared.module'
import { ControllersModule } from '../controllers/controllers.module'
import { AnalyticsComponent } from './analytics/analytics.component'
import { HeaderActionGroupComponent } from './header-action-group/header-action-group.component'
import { HeaderComponent } from './header/header.component'
import { HomeAnalyticsComponent } from './home-analytics/home-analytics.component'
import { HomeFeedComponent } from './home-feed/home-feed.component'
import { ObjectiveSwitchComponent } from './objective-switch/objective-switch.component'
import { SidenavCollapseComponent } from './sidenav-collapse/sidenav-collapse.component'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { HeaderActionGroupComponent } from '../header-action-group/header-action-group.component'
import { HeaderSearchComponent } from '../header-search/header-search.component'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HeaderBreadcrumbsComponent } from '../header-breadcrumbs/header-breadcrumbs.component'
import { HeaderComponent } from './header.component'
import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core'
import { RouterEvent } from '@angular/router'
import { User } from '../../../../core/models/User'
import { Channel } from '../../../../core/models/Channel'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { HeaderSearchComponent } from '../header-search/header-search.component'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HeaderActionGroupComponent } from './header-action-group.component'
import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core'
import { Router } from '@angular/router'
import { NgEngineService } from 'ng-engine'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HeaderBreadcrumbsComponent } from './header-breadcrumbs.component'
import { Component, Input, OnInit, ChangeDetectionStrategy, OnChanges } from '@angular/core'
import { Location } from '@angular/common'
import { NavigationEnd, RouterEvent } from '@angular/router'
import { SelectableGroup } from '../../../../core/services/navigation/navigation.service'
import { sortBy, isEmpty } from 'lodash'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HeaderSearchComponent } from './header-search.component'
import { Component, OnInit, Input, Output, ChangeDetectionStrategy, EventEmitter, ViewChild, ElementRef } from '@angular/core'
import { FormControl } from '@angular/forms'
import { debounceTime } from 'rxjs/operators'
import { of } from 'rxjs'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HomeAnalyticsComponent } from './home-analytics.component'
import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core'
import { Stats } from '../../models/Stats'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HomeCardComponent } from './home-card.component'
import { Component, OnInit, Input, HostBinding, OnChanges } from '@angular/core'
import { Analytic } from '../../models/Analytic'
import { Component } from '@angular/core'
import { FormsModule } from '@angular/forms'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HomeFeedComponent } from './home-feed.component'
import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'
import { FeedItem } from '../../models/FeedItem'
import { Feed } from '../../models/Feed'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { HomeHeaderComponent } from './home-header.component'
import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core'
import { User } from '../../../../core/models/User'
import { Channel } from '../../../../core/models/Channel'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { ObjectiveSwitchComponent } from './objective-switch.component'
import { Component, EventEmitter, Input, OnInit, Output, ChangeDetectionStrategy } from '@angular/core'
import { MatSlideToggleChange } from '@angular/material'
import { Channel } from '../../../../core/models/Channel'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { ProfileComponent } from './profile.component'
import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core'
import { User } from '../../../../core/models/User'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { ObjectiveSwitchComponent } from '../objective-switch/objective-switch.component'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { SidenavCollapseComponent } from '../sidenav-collapse/sidenav-collapse.component'
import { SidenavComponent } from './sidenav.component'
import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core'
import { MatSlideToggleChange } from '@angular/material'
import { NavBuilt } from '../../../../core/services/navigation/navigation.service'
import { Channel } from '../../../../core/models/Channel'
import { User } from '../../../../core/models/User'
import { animate, animateChild, group, state, style, transition, trigger, query, AnimationTriggerMetadata } from '@angular/animations'
import { Component } from '@angular/core'
import { ComponentTestContext } from '../../../../testing/test-context'
import { initializeHomeComponentsTestContext } from '../../testing/test-context'
import { SidenavCollapseComponent } from './sidenav-collapse.component'
import { ChangeDetectionStrategy, Component, OnInit, Input } from '@angular/core'
import { AnimationEvent } from '@angular/animations'
import { NavBuilt } from '../../../../core/services/navigation/navigation.service'
import { chain, isEmpty } from 'lodash'
import { sidenavExpansionAnimations } from './sidenav-collapse.animations'
import * as home from './home'
import * as events from '../../store/actions/events'
import { ContainerTestContext } from '../../../../testing/test-context'
import { initializeHomeContainersTestContext } from '../../testing/test-context'
import { ActivityComponent } from './activity.component'
import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, Inject } from '@angular/core'
import { Router, ActivatedRoute, Params, UrlTree, NavigationExtras } from '@angular/router'
import { DataSource } from '@angular/cdk/collections'
import { Store, select } from '@ngrx/store'
import { Actions, ofType } from '@ngrx/effects'
import { eventsActions } from '../../store/actions/index'
import * as fromEvents from '../../store/reducers/index'
import { NgEngineService } from 'ng-engine'
import { Observable, Subject } from 'rxjs'
import { takeUntil, map, tap } from 'rxjs/operators'
import { Event } from '../../models/Event'
import { MatCheckbox, MatDialog, MatPaginator, MatDialogRef, MAT_DIALOG_DATA, PageEvent } from '@angular/material'
import { FormGroupState, SetValueAction } from 'ngrx-forms'
import { ContainerTestContext } from '../../../../testing/test-context'
import { initializeHomeContainersTestContext } from '../../testing/test-context'
import { AnalyticsComponent } from './analytics.component'
import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core'
import { Store, select } from '@ngrx/store'
import * as analyticsEvents from '../../store/reducers/index'
import { Observable } from 'rxjs'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { RouterModule } from '@angular/router'
import { ServicesModule } from '../services/services.module'
import { GuardsModule } from '../guards/guards.module'
import { ComponentsModule } from '../components/components.module'
import { AnalyticsComponent } from './analytics/analytics.component'
import { MainComponent } from './main/main.component'
import { SharedModule } from '../../../shared/shared.module'
import { ControllersModule } from '../controllers/controllers.module'
import { ResolversModule } from '../resolvers/resolvers.module'
import { ActivityComponent } from './activity/activity.component'
import { HomeComponent } from './home/home.component'
import { ContainerTestContext } from '../../../../testing/test-context'
import { initializeHomeContainersTestContext } from '../../testing/test-context'
import { HomeComponent } from './home.component'
import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core'
import { Router } from '@angular/router'
import { Store, select } from '@ngrx/store'
import { CreateAction } from '../../store/actions/feed-items'
import * as fromApp from '../../../../core/store/reducers/index'
import { NgEngineService } from 'ng-engine'
import { Observable } from 'rxjs'
import * as fromHome from '../../store/reducers/index'
import { User } from '../../../../core/models/User'
import { Channel } from '../../../../core/models/Channel'
import { FeedItem } from '../../models/FeedItem'
import { Feed } from '../../models/Feed'
import { Stats } from '../../models/Stats'
import { async, ComponentFixture, TestBed } from '@angular/core/testing'
import { NoopAnimationsModule } from '@angular/platform-browser/animations'
import { APP_BASE_HREF, LocationStrategy, HashLocationStrategy } from '@angular/common'
import { StoreModule, combineReducers, Store } from '@ngrx/store'
import * as fromMain from '../../store/reducers/index'
import { NgEngineModule, NgEngineService, ENGINE_CONFIG } from 'ng-engine'
import { RouterTestingModule } from '@angular/router/testing'
import { NavigationService, NavItems, NavBuilt, SelectableGroup } from '../../../../core/services/navigation/navigation.service'
import * as appConfig from '../../../../../appConfig'
import { NGRX_MODULES } from '../../../../utils/testing/ngrx-modules'
import { MockComponentsModule } from '../../components/components.mocks'
import { ContainerTestContext } from '../../../../testing/test-context'
import { MockSharedModule } from '../../../../testing/mock-shared.module'
import { ContainersModule } from '../containers.module'
import { MainComponent } from './main.component'
import { configureTestSuite } from 'ng-bullet'
import { initializeHomeContainersTestContext } from '../../testing/test-context'
import { ChangeDetectionStrategy, Component, OnInit, PLATFORM_ID, Inject, NgZone, Renderer2, ViewChild, ElementRef } from '@angular/core'
import { Router, NavigationStart, NavigationEnd, Event, NavigationCancel, NavigationError } from '@angular/router'
import { MatSlideToggleChange } from '@angular/material'
import { Store, select } from '@ngrx/store'
import { channelsActions, authActions, appActions } from '../../../../core/store/actions/index'
import { searchActions } from '../../store/actions/index'
import * as fromApp from '../../../../core/store/reducers/index'
import { NgEngineService } from 'ng-engine'
import { Observable } from 'rxjs'
import { tap } from 'rxjs/operators'
import { isPlatformBrowser } from '@angular/common'
import * as fromHome from '../../store/reducers/index'
import { User } from '../../../../core/models/User'
import { fadeAnimation } from '../../../../shared/animations'
import { chain } from 'lodash'
import { NavigationService, NavItems, NavBuilt, SelectableGroup } from '../../../../core/services/navigation/navigation.service'
import { Channel } from '../../../../core/models/Channel'
import { ChannelsService } from '../../../../shared/channels/channels.service'
import { Injectable, Optional, Inject } from '@angular/core'
import { APP_BASE_HREF } from '@angular/common'
import { Store } from '@ngrx/store'
import { NgEngineService } from 'ng-engine'
import { Observable } from 'rxjs'
import { HttpClient } from '@angular/common/http'
import { AnalyticQuery } from '../models/AnalyticQuery'
import { ChannelsService } from '../../../shared/channels/channels.service'
import { Analytic } from '../models/Analytic'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { AnalyticsController } from './analytics.controller'
import { EventsController } from './events.controller'
import { FeedsController } from './feeds.controller'
import { SearchController } from './search.controller'
import { StatsController } from './stats.controller'
import { Injectable, Optional, Inject } from '@angular/core'
import { APP_BASE_HREF } from '@angular/common'
import { Store } from '@ngrx/store'
import { NgEngineService } from 'ng-engine'
import { Observable } from 'rxjs'
import { HttpClient } from '@angular/common/http'
import { Event } from '../models/Event'
import { ChannelsService } from '../../../shared/channels/channels.service'
import { EventQuery } from '../models/EventQuery'
import { Injectable, Optional, Inject } from '@angular/core'
import { APP_BASE_HREF } from '@angular/common'
import { Store } from '@ngrx/store'
import { NgEngineService } from 'ng-engine'
import { Observable } from 'rxjs'
import { HttpClient } from '@angular/common/http'
import { Feed } from '../models/Feed'
import { ChannelsService } from '../../../shared/channels/channels.service'
import { FeedItem } from '../models/FeedItem'
import { Injectable, Optional, Inject } from '@angular/core'
import { HttpClient } from '@angular/common/http'
import { APP_BASE_HREF } from '@angular/common'
import { Store } from '@ngrx/store'
import { NgEngineService } from 'ng-engine'
import { ChannelsService } from '../../../shared/channels/channels.service'
import { Injectable } from '@angular/core'
import { HttpClient } from '@angular/common/http'
import { ChannelsService } from '../../../shared/channels/channels.service'
import { Stats } from '../models/Stats'
import { Injectable } from '@angular/core'
import { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanLoad, Router, Route } from '@angular/router'
import { MatSnackBar } from '@angular/material'
import { Observable } from 'rxjs'
import { map, tap } from 'rxjs/operators'
import { ChannelsController } from '../../../core/controllers/channels.controller'
import { Injectable } from '@angular/core'
import { ActivatedRouteSnapshot, CanActivate, CanActivateChild, CanLoad, Router } from '@angular/router'
import { Store } from '@ngrx/store'
import { channelDescendantsActions } from '../../../core/store/actions/channel-descendants'
import { SelectAction } from '../../../core/store/actions/channels'
import { ChannelsService } from '../../../shared/channels/channels.service'
import { Injectable } from '@angular/core'
import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'
import { Store, select } from '@ngrx/store'
import { Actions, ofType } from '@ngrx/effects'
import { eventsActions } from '../store/actions/index'
import * as fromEvents from '../store/reducers/index'
import { Observable, of } from 'rxjs'
import { filter, take, map, tap, catchError, switchMap, exhaustMap } from 'rxjs/operators'
import { EventsController } from '../controllers/events.controller'
import { Injectable } from '@angular/core'
import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'
import { Store, select } from '@ngrx/store'
import { Actions, ofType } from '@ngrx/effects'
import { feedsActions, feedItemsActions } from '../store/actions/index'
import * as fromFeeds from '../store/reducers/index'
import { Observable, of } from 'rxjs'
import { filter, take, map, tap, catchError, switchMap, exhaustMap } from 'rxjs/operators'
import { FeedsController } from '../controllers/feeds.controller'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { StoreModule } from '@ngrx/store'
import { RouterModule } from '@angular/router'
import { ChannelRolesGuard } from './channel-role.guard'
import { ChannelSelectedGuard } from './channel-selected.guard'
import { EventsGuard } from './events'
import { FeedsGuard } from './feeds'
import { Injectable } from '@angular/core'
import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'
import { Store, select } from '@ngrx/store'
import { Actions, ofType } from '@ngrx/effects'
import { statsActions } from '../store/actions/index'
import * as fromStats from '../store/reducers/index'
import { Observable, of } from 'rxjs'
import { filter, take, map, tap, catchError, switchMap, exhaustMap } from 'rxjs/operators'
import { StatsController } from '../controllers/stats.controller'
import { HomeModule } from './home.module'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { StoreModule } from '@ngrx/store'
import { EffectsModule } from '@ngrx/effects'
import { reducers, getInitialState } from './store/reducers/index'
import { SharedModule } from '../../shared/shared.module'
import { ContainersModule } from './containers/containers.module'
import { HomeEffects, HomeEventsEffects, SearchEffects, FeedsEffects, FeedItemsEffects, HomeStatsEffects } from './store/effects/index'
import { homeRouter } from './home.router'
import { ControllersModule } from './controllers/controllers.module'
import { Routes, RouterModule } from '@angular/router'
import { ActivityComponent } from './containers/activity/activity.component'
import { HomeComponent } from './containers/home/home.component'
import { EventsGuard } from './guards/events'
import { ChannelSelectedGuard } from './guards/channel-selected.guard'
import { AnalyticsResolver } from './resolvers/analytics'
import { AnalyticsComponent } from './containers/analytics/analytics.component'
import { MainComponent } from './containers/main/main.component'
import { FeedsGuard } from './guards/feeds'
import { ChannelRolesGuard } from './guards/channel-role.guard'
import { NgPack } from 'ng-engine'
import * as CONFIG from './config'
import PKG from './package.json'
import { ACTIONS, EFFECTS, REDUCERS } from './store'
import { CollectionImage } from './CollectionImage'
import { OrderCustomer } from './OrderCustomer'
import { OrderAddress } from './OrderAddress'
import { ProductImage } from './ProductImage'
import { ProductProperty } from './ProductProperty'
import { Injectable } from '@angular/core'
import { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router'
import { Store, select } from '@ngrx/store'
import { homeActions } from '../store/actions/index'
import { State, getHomeHomeAnalyticsState, getHomeHomeLoaded, getHomeAnalytic } from '../store/reducers/index'
import { Observable, of, from } from 'rxjs'
import { filter, take, map, tap, catchError, switchMap, every } from 'rxjs/operators'
import * as fromCore from '../../../core/store/reducers/index'
import { Channel } from '../../../core/models/Channel'
import { AnalyticsController } from '../controllers/analytics.controller'
import { Analytic } from '../models/Analytic'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { StoreModule } from '@ngrx/store'
import { RouterModule } from '@angular/router'
import { AnalyticsResolver } from './analytics'
import { AnalyticTrendPipe } from './analytic-trend.pipe'
import { Pipe, PipeTransform } from '@angular/core'
import { Collection } from '../../models/Collection'
import { CollectionNamePipe } from './collection-name.pipe'
import { Pipe, PipeTransform } from '@angular/core'
import { Collection } from '../../models/Collection'
import pluralize from 'pluralize'
import { makePossessive } from '../../../../utils/pipes/make-possessive'
import { Customer } from '../../models/Customer'
import { CustomerNamePipe } from './customer-name.pipe'
import { Pipe, PipeTransform } from '@angular/core'
import { makePossessive } from '../../../../utils/pipes/make-possessive'
import pluralize from 'pluralize'
import { Customer } from '../../models/Customer'
import { FormatDatePipe } from './format-date.pipe'
import { format, subDays } from 'date-fns'
import { Pipe, PipeTransform } from '@angular/core'
import isToday from 'date-fns/is_today'
import format from 'date-fns/format'
import isYesterday from 'date-fns/is_yesterday'
import startOfDay from 'date-fns/start_of_day'
import { GroupByDatePipe } from './group-by-date.pipe'
import format from 'date-fns/format'
import { Pipe, PipeTransform } from '@angular/core'
import { Event } from '../../models/Event'
import format from 'date-fns/format'
import { groupBy, omit, sortBy } from 'lodash'
import startOfDay from 'date-fns/start_of_day'
import * as startOfDay from 'date-fns/start_of_day'
import { GroupRouterLinkPipe } from './group-router-link.pipe'
import format from 'date-fns/format'
import { Pipe, PipeTransform } from '@angular/core'
import { NavBuilt } from '../../../../core/services/navigation/navigation.service'
import { Offer } from '../../models/Offer'
import { OfferNamePipe } from './offer-name.pipe'
import { Pipe, PipeTransform } from '@angular/core'
import { Offer } from '../../models/Offer'
import pluralize from 'pluralize'
import { makePossessive } from '../../../../utils/pipes/make-possessive'
import { Order } from '../../models/Order'
import { OrderNamePipe } from './order-name.pipe'
import { Pipe, PipeTransform } from '@angular/core'
import { Order } from '../../models/Order'
import pluralize from 'pluralize'
import { makePossessive } from '../../../../utils/pipes/make-possessive'
import { Product } from '../../models/Product'
import { ProductNamePipe } from './product-name.pipe'
import { Pipe, PipeTransform } from '@angular/core'
import { Product } from '../../models/Product'
import pluralize from 'pluralize'
import { makePossessive } from '../../../../utils/pipes/make-possessive'
import { User } from '../../models/User'
import { UserNamePipe } from './user-name.pipe'
import { Pipe, PipeTransform } from '@angular/core'
import { User } from '../../models/User'
import pluralize from 'pluralize'
import { makePossessive } from '../../../../utils/pipes/make-possessive'
import { NgModule } from '@angular/core'
import { CommonModule } from '@angular/common'
import { BrowserAnimationsModule } from '@angular/platform-browser/animations'
import { RouterModule } from '@angular/router'
import { AnalyticTrendPipe } from './pipes/analytic-trend.pipe'
import { CustomerNamePipe } from './pipes/customer-name.pipe'
import { FormatDatePipe } from './pipes/format-date.pipe'
import { OrderNamePipe } from './pipes/order-name.pipe'
import { UserNamePipe } from './pipes/user-name.pipe'
import { SharedModule } from '../../../shared/shared.module'
import { CollectionNamePipe } from './pipes/collection-name.pipe'
import { OfferNamePipe } from './pipes/offer-name.pipe'
import { GroupByDatePipe } from './pipes/group-by-date.pipe'
import { ProductNamePipe } from './pipes/product-name.pipe'
import { GroupRouterLinkPipe } from './pipes/group-router-link.pipe'
import { Action } from '@ngrx/store'
import { Analytic } from '../../models/Analytic'
import { AnalyticQuery } from '../../models/AnalyticQuery'
import { Action } from '@ngrx/store'
import { Event } from '../../models/Event'
import { EventQuery } from '../../models/EventQuery'
import { Action } from '@ngrx/store'
import { Event } from '../../models/Event'
import { Feed } from '../../models/Feed'
import { EventQuery } from '../../models/EventQuery'
import { FeedItem } from '../../models/FeedItem'
import { Action } from '@ngrx/store'
import { Event } from '../../models/Event'
import { Feed } from '../../models/Feed'
import { EventQuery } from '../../models/EventQuery'
import { FeedItem } from '../../models/FeedItem'
import { Action } from '@ngrx/store'
import { Analytic } from '../../models/Analytic'
import * as analyticsActions from './analytics'
import * as eventsActions from './events'
import * as feedItemsActions from './feed-items'
import * as feedsActions from './feeds'
import * as homeActions from './home'
import * as searchActions from './search'
import * as statsActions from './stats'
import { Action } from '@ngrx/store'
import { Action } from '@ngrx/store'
import { AnalyticQuery } from '../../models/AnalyticQuery'
import { Stats } from '../../models/Stats'
import { Injectable, Optional, Inject } from '@angular/core'
import { Action } from '@ngrx/store'
import { Actions, Effect, ofType } from '@ngrx/effects'
import { NgEngineService } from 'ng-engine'
import { Observable, of, defer } from 'rxjs'
import { catchError, map, tap, switchMap, exhaustMap } from 'rxjs/operators'
import { ErrorService } from '../../../../shared/error/error.service'
import { EventsController } from '../../controllers/events.controller'
import { Injectable, Optional, Inject } from '@angular/core'
import { Action } from '@ngrx/store'
import { Actions, Effect, ofType } from '@ngrx/effects'
import { NgEngineService } from 'ng-engine'
import { Observable, of, defer } from 'rxjs'
import { catchError, map, tap, switchMap, exhaustMap } from 'rxjs/operators'
import { feedItemsActions } from '../actions'
import { FeedsController } from '../../controllers/feeds.controller'
import { ErrorService } from '../../../../shared/error/error.service'
import { Injectable, Optional, Inject } from '@angular/core'
import { Action } from '@ngrx/store'
import { Actions, Effect, ofType } from '@ngrx/effects'
import { NgEngineService } from 'ng-engine'
import { Observable, of, defer } from 'rxjs'
import { catchError, map, tap, switchMap, exhaustMap } from 'rxjs/operators'
import { feedsActions } from '../actions'
import { FeedsController } from '../../controllers/feeds.controller'
import { ErrorService } from '../../../../shared/error/error.service'
import { Injectable, Optional, Inject } from '@angular/core'
import { APP_BASE_HREF } from '@angular/common'
import { Action } from '@ngrx/store'
import { Actions, Effect, ofType } from '@ngrx/effects'
import { ActionTypes as HomeActions, CompareOneAction, CompareOneSuccessAction, CompareOneFailureAction } from '../actions/home'
import { NgEngineService } from 'ng-engine'
import { Observable, of, defer } from 'rxjs'
import { HttpClient } from '@angular/common/http'
import { AnalyticsController } from '../../controllers/analytics.controller'
import { catchError, map, mergeMap, tap } from 'rxjs/operators'
import { ErrorService } from '../../../../shared/error/error.service'
import { HomeEffects } from './home'
import { HomeEventsEffects } from './events'
import { SearchEffects } from './search'
import { FeedsEffects } from './feeds'
import { FeedItemsEffects } from './feed-items'
import { HomeStatsEffects } from './stats'
import { Injectable, PipeTransform } from '@angular/core'
import { Action } from '@ngrx/store'
import { Actions, Effect, ofType } from '@ngrx/effects'
import { NgEngineService } from 'ng-engine'
import { combineLatest, defer, Observable, of } from 'rxjs'
import { catchError, map, switchMap, tap } from 'rxjs/operators'
import { ErrorService } from '../../../../shared/error/error.service'
import { CollectionNamePipe } from '../../services/pipes/collection-name.pipe'
import { OfferNamePipe } from '../../services/pipes/offer-name.pipe'
import { UserNamePipe } from '../../services/pipes/user-name.pipe'
import { ChannelsService } from '../../../../shared/channels/channels.service'
import { SearchController } from '../../controllers/search.controller'
import { CustomerNamePipe } from '../../services/pipes/customer-name.pipe'
import { ProductNamePipe } from '../../services/pipes/product-name.pipe'
import { searchActions } from '../actions'
import { Injectable, Optional, Inject } from '@angular/core'
import { APP_BASE_HREF } from '@angular/common'
import { Action } from '@ngrx/store'
import { Actions, Effect, ofType } from '@ngrx/effects'
import { ActionTypes, FindAllAction, FindAllSuccessAction, FindAllFailureAction } from '../actions/stats'
import { NgEngineService } from 'ng-engine'
import { Observable, of, defer } from 'rxjs'
import { HttpClient } from '@angular/common/http'
import { AnalyticsController } from '../../controllers/analytics.controller'
import { StatsController } from '../../controllers/stats.controller'
import { catchError, map, mergeMap, tap } from 'rxjs/operators'
import { ErrorService } from '../../../../shared/error/error.service'
import * as actions from './actions'
import * as effects from './effects'
import * as reducers from './reducers'
import { createSelector } from '@ngrx/store'
import * as actions from '../actions/analytics'
import { Analytic } from '../../models/Analytic'
import { createSelector } from '@ngrx/store'
import * as actions from '../actions/events'
import { Event } from '../../models/Event'
import { createSelector } from '@ngrx/store'
import * as actions from '../actions/feed-items'
import { FeedItem } from '../../models/FeedItem'
import { paginationSort } from '../../../../utils/pagination-sort'
import { createSelector } from '@ngrx/store'
import * as actions from '../actions/feeds'
import { Feed } from '../../models/Feed'
import { CompareOneSuccessAction } from '../actions/home'
import { homeActions } from '../actions'
import { Analytic } from '../../models/Analytic'
import { ActionReducerMap, createSelector, createFeatureSelector } from '@ngrx/store'
import * as fromHome from './home'
import * as fromEvents from './events'
import * as fromAnalytics from './analytics'
import * as fromSearch from './search'
import * as fromFeeds from './feeds'
import * as fromFeedItems from './feed-items'
import * as fromStats from './stats'
import * as actions from '../actions/search'
import { createSelector } from '@ngrx/store'
import * as actions from '../actions/stats'
import { StoreModule } from '@ngrx/store'
import { EffectsModule } from '@ngrx/effects'
import * as fromHome from '../store/reducers/index'
import { createModularComponentTestContext, createModularContainerTestContext } from '../../../testing/root-test-context'
import { ServicesModule } from '../services/services.module'
import { ControllersModule } from '../controllers/controllers.module'
import { MockModule } from 'ng-mocks'
import { HomeEffects } from '../store/effects/index'
import { MockComponentsModule } from '../components/components.mocks'